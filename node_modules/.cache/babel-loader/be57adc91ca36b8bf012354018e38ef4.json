{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\chat\\\\client\\\\src\\\\components\\\\Friends\\\\Friends.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './friends.css';\nimport { friendRemoveAction } from '../../store/actions/friendAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Friends = _ref => {\n  _s();\n\n  let {\n    onConnect,\n    onlineFriends\n  } = _ref;\n  const dispatch = useDispatch();\n  const friends = useSelector(state => state.friend.friends);\n\n  const removeFriendHandler = (event, id) => {\n    event.stopPropagation();\n    dispatch(friendRemoveAction(id));\n  };\n\n  const connectToFriend = nickname => {\n    onConnect(nickname);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041C\\u043E\\u0438 \\u0414\\u0440\\u0443\\u0437\\u044C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friends.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        onClick: () => connectToFriend(f.nickname),\n        children: [f.nickname, \" \", onlineFriends.some(onf => onf === f.nickname) ? 'online' : 'offline', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeFriendHandler(e, f.id),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, f.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Friends, \"X3Z5nDJ+lkTJkdm5NvJXvSB6MlM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["F:/web/chat/client/src/components/Friends/Friends.js"],"names":["React","useSelector","useDispatch","friendRemoveAction","Friends","onConnect","onlineFriends","dispatch","friends","state","friend","removeFriendHandler","event","id","stopPropagation","connectToFriend","nickname","map","f","some","onf","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,eAAP;AACA,SAASC,kBAAT,QAAmC,kCAAnC;;;AAEA,MAAMC,OAAO,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA+B;AAE9C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,OAAvB,CAA3B;;AAEA,QAAMG,mBAAmB,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AACzCD,IAAAA,KAAK,CAACE,eAAN;AACAP,IAAAA,QAAQ,CAACJ,kBAAkB,CAACU,EAAD,CAAnB,CAAR;AACD,GAHD;;AAKA,QAAME,eAAe,GAAIC,QAAD,IAAc;AACpCX,IAAAA,SAAS,CAACW,QAAD,CAAT;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGR,OAAO,CAACS,GAAR,CAAYC,CAAC,iBACZ;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,OAAO,EAAE,MAAMH,eAAe,CAACG,CAAC,CAACF,QAAH,CAFhC;AAAA,mBAE+CE,CAAC,CAACF,QAFjD,OAE4DV,aAAa,CAACa,IAAd,CAAmBC,GAAG,IAAIA,GAAG,KAAKF,CAAC,CAACF,QAApC,IAAgD,QAAhD,GAA2D,SAFvH,eAGE;AAAQ,UAAA,OAAO,EAAEK,CAAC,IAAIV,mBAAmB,CAACU,CAAD,EAAIH,CAAC,CAACL,EAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAASK,CAAC,CAACL,EAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3BD;;GAAMT,O;UAEaF,W,EACDD,W;;;KAHZG,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport './friends.css'\r\nimport { friendRemoveAction } from '../../store/actions/friendAction';\r\n\r\nconst Friends = ({onConnect, onlineFriends}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const friends = useSelector(state => state.friend.friends)\r\n\r\n  const removeFriendHandler = (event, id) => {\r\n    event.stopPropagation()\r\n    dispatch(friendRemoveAction(id))\r\n  }\r\n\r\n  const connectToFriend = (nickname) => {\r\n    onConnect(nickname)\r\n  }\r\n  return (\r\n    <div>\r\n      <p>Мои Друзья</p>\r\n      <ul>\r\n        {friends.map(f => (\r\n          <li key={f.id} \r\n            className=\"item\" \r\n            onClick={() => connectToFriend(f.nickname)}>{f.nickname} {onlineFriends.some(onf => onf === f.nickname) ? 'online' : 'offline'}\r\n            <button onClick={e => removeFriendHandler(e, f.id)}>-</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n"]},"metadata":{},"sourceType":"module"}