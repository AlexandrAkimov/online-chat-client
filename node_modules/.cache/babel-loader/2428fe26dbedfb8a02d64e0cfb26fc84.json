{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\chat\\\\client\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFriends } from '../../store/actions/friendAction';\nimport { getUsers } from '../../store/actions/userAction';\nimport Findlist from '../FindList/FindList';\nimport Friends from '../Friends/Friends';\nimport './sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = _ref => {\n  _s();\n\n  let {\n    isDrawer,\n    onConnect,\n    onlineUsers\n  } = _ref;\n  const dispatch = useDispatch();\n  const [sidebar, setSidebar] = useState(['sidebar']);\n  const users = useSelector(state => state.user.users);\n  const [nick, setNick] = useState('');\n  const fetchFriends = useCallback(() => {\n    dispatch(getFriends());\n  }, [dispatch]);\n  useEffect(() => {\n    fetchFriends();\n  }, [fetchFriends]);\n  useEffect(() => {\n    isDrawer ? setSidebar(['sidebar', 'is_open']) : setSidebar(['sidebar']);\n  }, [isDrawer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: sidebar.join(' '),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar_content\",\n      children: [onlineUsers.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: u\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0439\\u0442\\u0438 \\u043A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\",\n        value: nick,\n        onChange: e => setNick(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(getUsers(nick)),\n        children: \"\\u041D\\u0430\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), users.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Findlist, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Friends, {\n        onConnect: onConnect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"ycpkQzAmvSKzRxFGRdgwTq/BF5U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["F:/web/chat/client/src/components/Sidebar/Sidebar.js"],"names":["React","useEffect","useState","useCallback","useSelector","useDispatch","getFriends","getUsers","Findlist","Friends","Sidebar","isDrawer","onConnect","onlineUsers","dispatch","sidebar","setSidebar","users","state","user","nick","setNick","fetchFriends","join","map","u","e","target","value","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,QAAsD,OAAtD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,eAAP;;;;AAEA,MAAMC,OAAO,GAAG,QAAwC;AAAA;;AAAA,MAAvC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,GAAuC;AACtD,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAtC;AACA,QAAMe,KAAK,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMoB,YAAY,GAAGnB,WAAW,CAAC,MAAM;AACrCW,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACD,GAF+B,EAE7B,CAACQ,QAAD,CAF6B,CAAhC;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,GAAGK,UAAU,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,CAAb,GAAwCA,UAAU,CAAC,CAAC,SAAD,CAAD,CAA1D;AACD,GAFQ,EAEN,CAACL,QAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACQ,IAAR,CAAa,GAAb,CAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACGV,WAAW,CAACW,GAAZ,CAAgBC,CAAC,iBAAK;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cAAtB,CADH,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,2EAFd;AAGE,QAAA,KAAK,EAAEL,IAHT;AAIE,QAAA,QAAQ,EAAEM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAJxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMd,QAAQ,CAACP,QAAQ,CAACa,IAAD,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGH,KAAK,CAACY,MAAN,gBACC;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEZ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,GAKG,IAbN,eAcE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCD;;GAAMF,O;UACaL,W,EAEHD,W;;;KAHVM,O;AA0CN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { getFriends } from '../../store/actions/friendAction';\r\nimport { getUsers } from '../../store/actions/userAction';\r\nimport Findlist from '../FindList/FindList';\r\nimport Friends from '../Friends/Friends';\r\nimport './sidebar.css'\r\n\r\nconst Sidebar = ({isDrawer, onConnect, onlineUsers}) => {\r\n  const dispatch = useDispatch()\r\n  const [sidebar, setSidebar] = useState(['sidebar'])\r\n  const users = useSelector(state => state.user.users)\r\n\r\n  const [nick, setNick] = useState('')\r\n\r\n  const fetchFriends = useCallback(() => {\r\n    dispatch(getFriends())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    fetchFriends()\r\n  }, [fetchFriends]);\r\n\r\n  useEffect(() => {\r\n    isDrawer ? setSidebar(['sidebar', 'is_open']) : setSidebar(['sidebar'])\r\n  }, [isDrawer])\r\n  \r\n  return (\r\n    <div className={sidebar.join(' ')}>\r\n      <div className=\"sidebar_content\">\r\n        {onlineUsers.map(u => (<div>{u}</div>))}\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Найти контакт\" \r\n          value={nick} \r\n          onChange={e => setNick(e.target.value)}/>\r\n        <button onClick={() => dispatch(getUsers(nick))}>Найти</button>\r\n        {users.length ?\r\n          <>\r\n            <Findlist users={users}/>\r\n            <hr/>\r\n          </>\r\n          : null}\r\n        <Friends onConnect={onConnect}/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}