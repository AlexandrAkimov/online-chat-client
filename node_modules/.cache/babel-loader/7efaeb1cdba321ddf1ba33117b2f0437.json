{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\chat\\\\client\\\\src\\\\components\\\\FriendListItem\\\\FriendListItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmptyAvatar from '../EmptyAvatar/EmptyAvatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendListItem = _ref => {\n  _s();\n\n  let {\n    onlineFriends,\n    friend,\n    connectToFriend,\n    removeFriendHandler\n  } = _ref;\n  const [errorImg, setErrorImg] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item item-friend\",\n    onClick: e => connectToFriend(e, friend.nickname),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-user\",\n      children: [errorImg ? /*#__PURE__*/_jsxDEV(EmptyAvatar, {\n        nickname: friend.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        onError: () => setErrorImg(true),\n        className: \"avatar\",\n        src: `${process.env.REACT_APP_API_URL}${friend.photo}`,\n        alt: friend.photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), friend.nickname, \" \", onlineFriends.some(onf => onf === friend.nickname) ? 'online' : 'offline']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => removeFriendHandler(e, friend.id),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, friend.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FriendListItem, \"uSton5Jf2aAlyVwCWxSS69iyw2k=\");\n\n_c = FriendListItem;\nexport default FriendListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendListItem\");","map":{"version":3,"sources":["F:/web/chat/client/src/components/FriendListItem/FriendListItem.js"],"names":["React","useState","EmptyAvatar","FriendListItem","onlineFriends","friend","connectToFriend","removeFriendHandler","errorImg","setErrorImg","e","nickname","process","env","REACT_APP_API_URL","photo","some","onf","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,cAAc,GAAG,QAAqE;AAAA;;AAAA,MAApE;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,eAAzB;AAA0CC,IAAAA;AAA1C,GAAoE;AAC1F,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,sBACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,OAAO,EAAGS,CAAD,IAAOJ,eAAe,CAACI,CAAD,EAAIL,MAAM,CAACM,QAAX,CAFjC;AAAA,4BAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBAEIH,QAAQ,gBAAG,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEH,MAAM,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAH,gBACN;AAAK,QAAA,OAAO,EAAE,MAAMF,WAAW,CAAC,IAAD,CAA/B;AAAuC,QAAA,SAAS,EAAC,QAAjD;AAA0D,QAAA,GAAG,EAAG,GAAEG,OAAO,CAACC,GAAR,CAAYC,iBAAkB,GAAET,MAAM,CAACU,KAAM,EAA/G;AAAkH,QAAA,GAAG,EAAEV,MAAM,CAACU;AAA9H;AAAA;AAAA;AAAA;AAAA,cAHN,EAIIV,MAAM,CAACM,QAJX,OAIsBP,aAAa,CAACY,IAAd,CAAmBC,GAAG,IAAIA,GAAG,KAAKZ,MAAM,CAACM,QAAzC,IAAqD,QAArD,GAAgE,SAJtF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAQ,MAAA,OAAO,EAAED,CAAC,IAAIH,mBAAmB,CAACG,CAAD,EAAIL,MAAM,CAACa,EAAX,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,KAASb,MAAM,CAACa,EAAhB;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;;GAAMf,c;;KAAAA,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport EmptyAvatar from '../EmptyAvatar/EmptyAvatar';\r\n\r\nconst FriendListItem = ({ onlineFriends, friend, connectToFriend, removeFriendHandler }) => {\r\n  const [errorImg, setErrorImg] = useState(false)\r\n  return (\r\n    <li key={friend.id}\r\n      className=\"item item-friend\"\r\n      onClick={(e) => connectToFriend(e, friend.nickname)}>\r\n      <div className=\"item-user\">\r\n        {\r\n          errorImg ? <EmptyAvatar nickname={friend.nickname} /> :\r\n            <img onError={() => setErrorImg(true)} className=\"avatar\" src={`${process.env.REACT_APP_API_URL}${friend.photo}`} alt={friend.photo} />\r\n        }{friend.nickname} {onlineFriends.some(onf => onf === friend.nickname) ? 'online' : 'offline'}\r\n      </div>\r\n      <button onClick={e => removeFriendHandler(e, friend.id)}>-</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n"]},"metadata":{},"sourceType":"module"}