{"ast":null,"code":"import axios from 'axios';\nimport { createBrowserHistory } from 'history';\nconst $host = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\nconst authInterceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.token}x`;\n  return config;\n};\n\n$authHost.interceptors.response.use(response => {}, error => {\n  console.log(error.response.status);\n});\n$authHost.interceptors.request.use(authInterceptor);\nexport { $host, $authHost };","map":{"version":3,"sources":["F:/web/chat/client/src/api/axios.js"],"names":["axios","createBrowserHistory","$host","create","baseURL","process","env","REACT_APP_API_URL","$authHost","authInterceptor","config","headers","authorization","localStorage","token","interceptors","response","use","error","console","log","status","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AAEA,MAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADI,CAAb,CAAd;AAIA,MAAMC,SAAS,GAAGR,KAAK,CAACG,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADQ,CAAb,CAAlB;;AAKA,MAAME,eAAe,GAAGC,MAAM,IAAI;AAChCA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASC,YAAY,CAACC,KAAM,GAA5D;AACA,SAAOJ,MAAP;AACD,CAHD;;AAKAF,SAAS,CAACO,YAAV,CAAuBC,QAAvB,CAAgCC,GAAhC,CAAoCD,QAAQ,IAAI,CAG/C,CAHD,EAGGE,KAAK,IAAI;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAN,CAAeK,MAA3B;AACD,CALD;AAOAb,SAAS,CAACO,YAAV,CAAuBO,OAAvB,CAA+BL,GAA/B,CAAmCR,eAAnC;AAKA,SACEP,KADF,EACSM,SADT","sourcesContent":["import axios from 'axios'\r\nimport {createBrowserHistory} from 'history'\r\n\r\nconst $host = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL\r\n})\r\n\r\nconst $authHost = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL\r\n})\r\n\r\n\r\nconst authInterceptor = config => {\r\n  config.headers.authorization = `Bearer ${localStorage.token}x`\r\n  return config\r\n}\r\n\r\n$authHost.interceptors.response.use(response => {\r\n\r\n  \r\n}, error => {\r\n  console.log(error.response.status);\r\n})\r\n\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\n\r\n\r\n\r\nexport {\r\n  $host, $authHost\r\n}"]},"metadata":{},"sourceType":"module"}