{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\chat\\\\client\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './chat.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    onToggle\n  } = _ref;\n  const navigate = useNavigate();\n\n  const logoutHandler = () => {\n    localStorage.token = '';\n    navigate('/login');\n  };\n\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const socket = useRef();\n\n  const connection = () => {\n    socket.current = new WebSocket('ws://localhost:5000');\n\n    socket.current.onopen = () => {\n      setConnected(true);\n      const message = {\n        event: 'connection',\n        username: 'USER NumX',\n        id: Date.now()\n      };\n      socket.current.send(JSON.stringify(message));\n      console.log('Подключение установлено');\n    };\n\n    socket.current.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prev => [message, ...prev]);\n    };\n\n    socket.current.onclose = () => {\n      console.log('Поздключение закрыто');\n    };\n\n    socket.current.onerror = () => {\n      console.log('Ошибка');\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logoutHandler,\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0447\\u0430\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connection,\n        children: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: mess.event === 'connection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \", mess.username, \" \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0441\\u044F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [mess.username, \". \", mess.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)\n      }, mess.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"at1HvWx2n1rKMEWo3qkHHXN/Hec=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["F:/web/chat/client/src/components/Chat.js"],"names":["React","useEffect","useRef","useState","useNavigate","Header","Home","onToggle","navigate","logoutHandler","localStorage","token","connected","setConnected","messages","setMessages","socket","connection","current","WebSocket","onopen","message","event","username","id","Date","now","send","JSON","stringify","console","log","onmessage","parse","data","prev","onclose","onerror","flexGrow","map","mess"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,IAAI,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,aAAa,GAAG,MAAM;AAC1BC,IAAAA,YAAY,CAACC,KAAb,GAAqB,EAArB;AACAH,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,GAHD;;AAKA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMa,MAAM,GAAGd,MAAM,EAArB;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBD,IAAAA,MAAM,CAACE,OAAP,GAAiB,IAAIC,SAAJ,CAAc,qBAAd,CAAjB;;AAEAH,IAAAA,MAAM,CAACE,OAAP,CAAeE,MAAf,GAAwB,MAAM;AAC5BP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMQ,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAE,YADO;AAEdC,QAAAA,QAAQ,EAAE,WAFI;AAGdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAHU,OAAhB;AAMAV,MAAAA,MAAM,CAACE,OAAP,CAAeS,IAAf,CAAoBC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAApB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KAVD;;AAYAf,IAAAA,MAAM,CAACE,OAAP,CAAec,SAAf,GAA4BV,KAAD,IAAW;AACpC,YAAMD,OAAO,GAAGO,IAAI,CAACK,KAAL,CAAWX,KAAK,CAACY,IAAjB,CAAhB;AACAnB,MAAAA,WAAW,CAACoB,IAAI,IAAI,CAACd,OAAD,EAAU,GAAGc,IAAb,CAAT,CAAX;AACD,KAHD;;AAKAnB,IAAAA,MAAM,CAACE,OAAP,CAAekB,OAAf,GAAyB,MAAM;AAC7BN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAFD;;AAIAf,IAAAA,MAAM,CAACE,OAAP,CAAemB,OAAf,GAAyB,MAAM;AAC7BP,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAFD;AAGD,GA3BD;;AA4BA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE/B;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEQ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGH,QAAQ,CAACyB,GAAT,CAAaC,IAAI,iBAChB;AAAA,kBAEIA,IAAI,CAAClB,KAAL,KAAe,YAAf,gBACI;AAAA,kGAAmBkB,IAAI,CAACjB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAEI;AAAA,qBAAMiB,IAAI,CAACjB,QAAX,QAAuBiB,IAAI,CAACnB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR,SAAUmB,IAAI,CAAChB,EAAf;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1DD;;GAAMlB,I;UACaF,W;;;KADbE,I;AA8DN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport './chat.css'\r\nimport Header from './Header';\r\n\r\n\r\nconst Home = ({onToggle}) => {\r\n  const navigate = useNavigate()\r\n  const logoutHandler = () => {\r\n    localStorage.token = ''\r\n    navigate('/login')\r\n  }\r\n\r\n  const [connected, setConnected] = useState(false)\r\n  const [messages, setMessages] = useState([])\r\n  const socket = useRef()\r\n\r\n  const connection = () => {\r\n    socket.current = new WebSocket('ws://localhost:5000')\r\n\r\n    socket.current.onopen = () => {\r\n      setConnected(true)\r\n      const message = {\r\n        event: 'connection',\r\n        username: 'USER NumX',\r\n        id: Date.now()\r\n      }\r\n\r\n      socket.current.send(JSON.stringify(message))\r\n      console.log('Подключение установлено');\r\n    }\r\n\r\n    socket.current.onmessage = (event) => {\r\n      const message = JSON.parse(event.data)\r\n      setMessages(prev => [message, ...prev])\r\n    }\r\n\r\n    socket.current.onclose = () => {\r\n      console.log('Поздключение закрыто');\r\n    }\r\n\r\n    socket.current.onerror = () => {\r\n      console.log('Ошибка');\r\n    }\r\n  }\r\n  return (\r\n    <div style={{flexGrow: 1}}>\r\n      <Header onToggle={onToggle}/>\r\n      <div className=\"home\">\r\n        <button onClick={logoutHandler}>Выйти из чата</button>\r\n        <button onClick={connection}>Подключиться</button>\r\n        <br/>\r\n        {messages.map(mess => \r\n          <div key={mess.id}>\r\n            {\r\n              mess.event === 'connection'\r\n                ? <div>Пользователь {mess.username} подключился</div>\r\n                : <div>{mess.username}. {mess.message}</div>\r\n            }\r\n          </div>  \r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}