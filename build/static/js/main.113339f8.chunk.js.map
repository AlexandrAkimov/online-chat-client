{"version":3,"sources":["store/types.js","api/axios.js","api/userApi.js","store/actions/userAction.js","pages/Login.js","api/friendApi.js","store/actions/friendAction.js","components/EmptyAvatar/EmptyAvatar.js","components/FindListItem/FindListItem.js","components/FindList/FindList.js","components/FriendListItem/FriendListItem.js","components/Friends/Friends.js","components/Sidebar/Sidebar.js","components/Header/Header.js","components/Home/Chat.js","pages/Chat.js","pages/Profile.js","App.js","store/reducers/friendReducer.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["LOGIN","LOGOUT","GET_USERS","GET_CURRENT_USER","CLEAR_USERS","REMOVE_FRIEND","GET_FRIENDS","$host","axios","create","baseURL","$authHost","interceptors","response","use","error","status","console","log","window","location","href","request","config","headers","authorization","localStorage","token","registration","payload","a","post","login","update","findUsers","nick","get","getCurrentUser","user","jwt_decode","type","loginAction","formdata","isLogin","dispatch","data","Error","updateProfile","formData","Login","useDispatch","useState","password","setPassword","nickname","setNickname","file","setFile","navigate","useNavigate","loginHandler","FormData","append","message","className","value","placeholder","onChange","e","target","event","files","style","color","onClick","width","addFriend","id","removeFriend","delete","getFriendsApi","getFriends","friends","EmptyAvatar","big","split","map","word","substr","toUpperCase","filter","letter","join","FindListItem","onAddFriend","errorImg","setErrorImg","onError","src","process","photo","alt","some","f","friendid","Findlist","users","currentUser","useSelector","state","friend","friendAddAction","useEffect","length","u","FriendListItem","onlineFriends","connectToFriend","removeFriendHandler","onf","fontSize","Friends","onConnect","stopPropagation","friendRemoveAction","Sidebar","isDrawer","onlineUsers","sidebar","setSidebar","setNick","fetchFriends","useCallback","Set","Header","onToggle","onLogout","isMenu","setIsMenu","cursor","prev","photos","Home","cond","messages","sendMessage","onDisconnect","divRef","useRef","params","useParams","setValue","flexGrow","clear","profile","ref","m","m2","i","findIndex","e2","mess","username","moment","Date","format","onKeyUp","code","setTimeout","current","scrollTop","scrollHeight","Chat","setIsDrawer","room","setRoom","setMessages","setOnlineUsers","clients","setClients","socket","publicSocket","WebSocket","onopen","now","send","JSON","stringify","onmessage","parse","p","onclose","display","backgroundColor","toOnline","roomNum","includes","onerror","Profile","fileRef","name","setName","previewSrc","setPreviewSrc","saveProfileHandler","padding","alignItems","flexDirection","title","fileOne","reader","FileReader","onload","ev","result","readAsDataURL","click","marginTop","justifyContent","App","path","element","initialState","handlers","action","rootReducer","combineReducers","handler","DEFAULT","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.113339f8.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const ADD_FRIEND = 'ADD_FRIEND'\r\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND'\r\nexport const GET_FRIENDS = 'GET_FRIENDS'","import axios from 'axios'\r\n//import {createBrowserHistory} from 'history'\r\n\r\nconst $host = axios.create({\r\n  baseURL: 'https://chat-app-online.herokuapp.com/'\r\n})\r\n\r\nconst $authHost = axios.create({\r\n  baseURL: 'https://chat-app-online.herokuapp.com/'\r\n})\r\n\r\n\r\nconst authInterceptor = config => {\r\n  config.headers.authorization = `Bearer ${localStorage.token}`\r\n  return config\r\n}\r\n\r\n$authHost.interceptors.response.use(response => response, error => {\r\n  if (error.response.status === 401) {\r\n    console.log('HERE');\r\n    window.location.href = '/login'\r\n   // createBrowserHistory().push('/login')\r\n  }\r\n})\r\n\r\n$authHost.interceptors.request.use(authInterceptor)\r\n\r\n\r\n\r\n\r\nexport {\r\n  $host, $authHost\r\n}","import {$host, $authHost} from './axios'\r\n\r\nexport const registration = async payload => {\r\n\r\n  const response = await $host.post('api/users/registration', payload)\r\n  \r\n  return response\r\n}\r\n\r\nexport const login = async (payload) => {\r\n  const response = await $host.post('api/users/login', payload)\r\n  return response\r\n}\r\n\r\nexport const update = async (payload) => {\r\n  const response = await $authHost.post('api/users/update', payload)\r\n  return response\r\n}\r\n\r\nexport const findUsers = async nick => {\r\n  const response = await $authHost.get(`api/users/${nick}`)\r\n  return response\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport { LOGIN, LOGOUT, GET_USERS, CLEAR_USERS, GET_CURRENT_USER } from \"../types\"\r\nimport { findUsers, login, registration, update } from '../../api/userApi';\r\n\r\nexport const getCurrentUser = () => {\r\n  const token = localStorage.token\r\n  const user = jwt_decode(token);\r\n  return {type: GET_CURRENT_USER, payload: user}\r\n}\r\n\r\nexport const loginAction = (formdata, isLogin) => {\r\n  return async dispatch => {\r\n    try {\r\n      const data = isLogin\r\n        ? await login(formdata)\r\n        : await registration(formdata)\r\n      dispatch({\r\n        type: LOGIN, payload: data.data.token\r\n      })\r\n      localStorage.token = data.data.token;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const updateProfile = formData => {\r\n  return async dispatch => {\r\n    try {\r\n      const data = await update(formData)\r\n      dispatch({\r\n        type: LOGIN, payload: data.data.token\r\n      })\r\n      localStorage.token = data.data.token;\r\n      dispatch(getCurrentUser())\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearUsers = () => ({ type: CLEAR_USERS })\r\n\r\nexport const logout = () => {\r\n  localStorage.clear()\r\n  return {\r\n    type: LOGOUT,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getUsers = nickname => {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await findUsers(nickname)\r\n      console.log(users.data);\r\n      dispatch({\r\n        type: GET_USERS, payload: users.data\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginAction } from '../store/actions/userAction';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch()\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [file, setFile] = useState(null)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const changeFileHandler = event => {\r\n    setFile(event.target.files[0])\r\n  }\r\n  const loginHandler = async (isLogin) => {\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('nickname', nickname)\r\n      formData.append('password', password)\r\n      if (file && !isLogin) {\r\n        formData.append('photo', file)\r\n      } else {\r\n        formData.append('photo', '')\r\n      }\r\n      await dispatch(loginAction(formData, isLogin));\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n\r\n\r\n  }\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"card\">\r\n        <label className=\"label\">никнейм</label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          value={nickname}\r\n          placeholder=\"Введите Никнэйм\"\r\n          onChange={e => setNickname(e.target.value)} /><br />\r\n        <label className=\"label\">пароль</label>\r\n        <input className=\"input\" type=\"password\" value={password} placeholder=\"Введите пароль\" onChange={e => setPassword(e.target.value)} /><br />\r\n        <input type=\"file\" placeholder=\"Выберите фото\" onChange={changeFileHandler} style={{color: '#7a7a7a'}} /><br />\r\n        <div className=\"btns\">\r\n          <button onClick={() => loginHandler(true)} className=\"btn\">Войти</button>\r\n          <button onClick={() => loginHandler()} className=\"btn\" style={{width: 'auto'}}>Зарегистрироваться</button>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {$authHost} from './axios'\r\n\r\nexport const addFriend = async ({id, nickname}) => {\r\n  const response = await $authHost.post('api/friend', {id, nickname})\r\n  return response\r\n}\r\n\r\nexport const removeFriend = async id => {\r\n  const response = await $authHost.delete('api/friend', { data: {id}} )\r\n  return response\r\n}\r\n\r\nexport const getFriendsApi = async () => {\r\n  const response = await $authHost.get(`api/friend`)\r\n  return response\r\n}","import { GET_FRIENDS, REMOVE_FRIEND} from \"../types\"\r\nimport {addFriend, removeFriend, getFriendsApi} from '../../api/friendApi';\r\n\r\nexport const getFriends = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const friends = await getFriendsApi()\r\n      console.log(friends);\r\n      dispatch({\r\n        type: GET_FRIENDS, payload: friends.data\r\n      })  \r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n}\r\n\r\nexport const friendAddAction = friend => {\r\n  return async dispatch => {\r\n    try {\r\n      await addFriend(friend) //{id, nickname}\r\n      dispatch(getFriends())  \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport const friendRemoveAction = id => {\r\n  return async dispatch => {\r\n    try {\r\n      await removeFriend(id)\r\n      dispatch({\r\n        type: REMOVE_FRIEND, payload: id\r\n      })  \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './emptyavatar.css'\r\n\r\nconst EmptyAvatar = ({nickname, big}) => {\r\n\r\n  return (\r\n    <div className={`avatar_empty  ${big ? 'big_photo' : ''}`}>\r\n      <strong className={`text`}>{nickname.split(' ').map(word => word.substr(0, 1).toUpperCase()).filter(letter => letter !== ' ').join('').substr(0, 2)}</strong>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyAvatar;\r\n","import React, { useState } from 'react';\r\nimport EmptyAvatar from '../EmptyAvatar/EmptyAvatar';\r\nimport './findlistitem.css';\r\n\r\nconst FindListItem = ({user, friends, onAddFriend}) => {\r\n  const [errorImg, setErrorImg] = useState(false)\r\n  return (\r\n    <li key={user.id} className=\"item\">\r\n      <div className=\"item-user\">\r\n        {\r\n          errorImg ? <EmptyAvatar nickname={user.nickname}/> :\r\n          <img onError={() => setErrorImg(true)} className=\"avatar\" src={`${process.env.REACT_APP_API_URL}${user?.photo}`} alt={user.photo} />\r\n        }{user.nickname}\r\n      </div>\r\n\r\n      {friends.some(f => f.friendid === user.id)\r\n        ? null\r\n        : <button onClick={() => onAddFriend(user)}>+</button>\r\n      }\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FindListItem;\r\n","import './findlist.css'\r\nimport React, {useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { friendAddAction } from '../../store/actions/friendAction';\r\nimport FindListItem from '../FindListItem/FindListItem';\r\n\r\n\r\nconst Findlist = ({users}) => {\r\n  const currentUser = useSelector(state => state.user.currentUser)\r\n  const friends = useSelector(state => state.friend.friends)\r\n  const dispatch = useDispatch()\r\n  const addFriend = friend => {\r\n    dispatch(friendAddAction(friend))\r\n  }\r\n  useEffect(() => {\r\n    console.log(friends);\r\n  }, [friends]);\r\n  return (\r\n    <div>\r\n      <p style={{color: '#7a7a7a'}}><strong>Найдено {users.length} человек:</strong></p>\r\n      <ul className=\"list\">\r\n        {users.filter(u => u.id !== currentUser.id).map(user => (\r\n          <FindListItem key={user.id} onAddFriend={addFriend} user={user} friends={friends}/>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Findlist;\r\n","import React, { useState } from 'react';\r\nimport EmptyAvatar from '../EmptyAvatar/EmptyAvatar';\r\nimport './friendlistitem.css'\r\nimport {AiOutlineDelete} from 'react-icons/ai'\r\n\r\nconst FriendListItem = ({ onlineFriends, friend, connectToFriend, removeFriendHandler }) => {\r\n  const [errorImg, setErrorImg] = useState(false)\r\n  return (\r\n    <li key={friend.id}\r\n      className=\"item item-friend\"\r\n      onClick={(e) => connectToFriend(e, friend.nickname)}>\r\n      <div className=\"item-user\">\r\n        {\r\n          errorImg ? <EmptyAvatar nickname={friend.nickname} /> :\r\n            <img onError={() => setErrorImg(true)} className=\"avatar\" src={`${process.env.REACT_APP_API_URL}${friend.photo}`} alt={friend.photo} />\r\n        }<span className=\"fr_nick\">{friend.nickname}</span>\r\n      </div>\r\n      <div className=\"friend-actions\">\r\n        <span className={`status ${!onlineFriends.some(onf => onf === friend.nickname) ? 'red' : ''}`}>{onlineFriends.some(onf => onf === friend.nickname) ? 'online' : 'offline'}</span>\r\n        <button className=\"btn_remove\" onClick={e => removeFriendHandler(e, friend.id)}>\r\n          <AiOutlineDelete color=\"tomato\" fontSize=\"20px\" />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport './friends.css'\r\nimport { friendRemoveAction } from '../../store/actions/friendAction';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\n\r\nconst Friends = ({onConnect, onlineFriends}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const friends = useSelector(state => state.friend.friends)\r\n\r\n  const removeFriendHandler = (event, id) => {\r\n    event.stopPropagation()\r\n    dispatch(friendRemoveAction(id))\r\n  }\r\n\r\n  const connectToFriend = (e, nickname) => {\r\n    e.stopPropagation()\r\n    onConnect(nickname)\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{color: '#7a7a7a'}}><strong>Мои Друзья:</strong></p>\r\n      <ul className=\"list\">\r\n        {friends.map(f => (\r\n          <FriendListItem key={f.id} friend={f} connectToFriend={connectToFriend} removeFriendHandler={removeFriendHandler} onlineFriends={onlineFriends}/>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n","import React, {useEffect, useState, useCallback} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { getFriends } from '../../store/actions/friendAction';\r\nimport { getUsers } from '../../store/actions/userAction';\r\nimport Findlist from '../FindList/FindList';\r\nimport Friends from '../Friends/Friends';\r\nimport './sidebar.css'\r\n\r\nconst Sidebar = ({isDrawer, onConnect, onlineUsers}) => {\r\n  const dispatch = useDispatch()\r\n  const [sidebar, setSidebar] = useState(['sidebar'])\r\n  const users = useSelector(state => state.user.users)\r\n\r\n  const [nick, setNick] = useState('')\r\n\r\n  const fetchFriends = useCallback(() => {\r\n    dispatch(getFriends())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    fetchFriends()\r\n  }, [fetchFriends]);\r\n\r\n  useEffect(() => {\r\n    isDrawer ? setSidebar(['sidebar', 'is_open']) : setSidebar(['sidebar'])\r\n  }, [isDrawer])\r\n  \r\n  return (\r\n    <div className={sidebar.join(' ')}>\r\n      <div className=\"sidebar_content\">\r\n        <input \r\n          type=\"text\" \r\n          className=\"input\"\r\n          placeholder=\"Найти контакт\" \r\n          value={nick} \r\n          onChange={e => setNick(e.target.value)}/>\r\n        <button className=\"btn\" onClick={() => dispatch(getUsers(nick))}>Найти</button>\r\n        {users.length ?\r\n          <>\r\n            <Findlist users={users}/>\r\n            <hr color=\"#7a7a7a\"/>\r\n          </>\r\n          : null}\r\n        <Friends onConnect={onConnect} onlineFriends={[...new Set(onlineUsers)]}/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport { BiLogOut } from \"react-icons/bi\";\r\nimport './header.css'\r\nimport EmptyAvatar from '../EmptyAvatar/EmptyAvatar';\r\nconst Header = ({ onToggle, onLogout, isDrawer }) => {\r\n  const [errorImg, setErrorImg] = useState(false)\r\n  const [isMenu, setIsMenu] = useState(false)\r\n  const currentUser = useSelector(state => state.user.currentUser)\r\n  const navigate = useNavigate()\r\n  const toProfile = () => {\r\n    setIsMenu(false)\r\n    navigate('/profile')\r\n  }\r\n  return (\r\n    <header className=\"header\">\r\n      <MdMenu color=\"#fff\" fontSize=\"30px\" cursor=\"pointer\" onClick={onToggle} />\r\n      {!isDrawer ?\r\n        <div className=\"actions\">\r\n        <div className=\"item-user\" onClick={() => setIsMenu(prev => !prev)}>\r\n          {\r\n            errorImg ? <EmptyAvatar nickname={currentUser?.nickname} /> :\r\n              <img onError={() => setErrorImg(true)} className=\"avatar\" src={`${process.env.REACT_APP_API_URL}${currentUser?.photo}`} alt={currentUser?.photos} />\r\n          }\r\n          <span className=\"nickname\">{currentUser?.nickname}</span>\r\n        </div>\r\n        \r\n        { isMenu ?\r\n          <div className=\"menu\">\r\n            <p className=\"menu_item\" onClick={toProfile}>Профиль</p>\r\n            <p className=\"menu_item\">Удалить аккаунт</p>\r\n          </div>\r\n          : null\r\n        }\r\n        <div>\r\n          <BiLogOut color=\"#fff\" fontSize=\"30px\" cursor=\"pointer\" onClick={() => onLogout(currentUser?.nickname)} />\r\n        </div>\r\n      </div>\r\n      : null}\r\n      \r\n\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useNavigate, Outlet, useParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { logout } from '../../store/actions/userAction';\r\nimport './chat.css'\r\nimport Header from '../Header/Header';\r\nimport { AiOutlineSend } from \"react-icons/ai\";\r\n\r\n\r\nconst Home = ({ onToggle, messages, sendMessage, onDisconnect, currentUser, isDrawer }) => {\r\n  const divRef = useRef(null);\r\n  let params = useParams()\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n\r\n  const logoutHandler = (nickname) => {\r\n    onDisconnect(nickname)\r\n    dispatch(logout())\r\n    navigate('/login')\r\n  }\r\n\r\n\r\n  //const [connected, setConnected] = useState(false)\r\n  const [value, setValue] = useState('')\r\n\r\n\r\n  const keyUpHandlerSendMessage = e => {\r\n    if (e.code === 'Enter') {\r\n      sendMessage(value)\r\n      setValue('')\r\n      setTimeout(() => {\r\n        divRef.current.scrollTop = divRef.current.scrollHeight;\r\n      }, 0);\r\n\r\n    }\r\n  }\r\n\r\n  function uniqueBy(a, cond) {\r\n    return a.filter((e, i) => a.findIndex(e2 => cond(e, e2)) === i);\r\n  }\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <Header onToggle={onToggle} onLogout={logoutHandler} isDrawer={isDrawer}/>\r\n      {\r\n        !params.profile ?\r\n          <div className=\"main_home\">\r\n            <div className=\"home\" ref={divRef}>\r\n\r\n              {uniqueBy(messages, (m, m2) => m.id === m2.id).map(mess => {\r\n                return (<div key={mess.id}>\r\n                  {\r\n                    mess.event === 'connection'\r\n                      ? <div className=\"meta_text\">Пользователь {mess.username} подключился</div>\r\n                      : <div className={`meta_user_text ${mess.username !== currentUser.nickname ? 'right' : ''}`}>\r\n                        <div>{mess.username === currentUser.nickname ? 'Вы' : mess.username}</div>\r\n                        <div className={`message_text ${mess.username === currentUser.nickname ? 'myself' : ''}`}>{mess.message}</div> <span className=\"time\">{moment(new Date(+mess.id)).format('HH:mm')}</span>\r\n                      </div>\r\n                  }\r\n                </div>)\r\n              })}\r\n\r\n            </div>\r\n            <div className=\"actionss\">\r\n              <textarea\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n                className=\"textarea\"\r\n                placeholder=\"Введите сообщение\"\r\n                onKeyUp={keyUpHandlerSendMessage} />\r\n\r\n              <AiOutlineSend color=\"#7a7a7a\" fontSize=\"30px\" onClick={() => {\r\n                sendMessage(value);\r\n                setValue('')\r\n                setTimeout(() => {\r\n                  divRef.current.scrollTop = divRef.current.scrollHeight;\r\n                }, 0);\r\n              }} />\r\n\r\n            </div>\r\n\r\n          </div> : null\r\n      }\r\n\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Sidebar from '../components/Sidebar/Sidebar';\r\nimport Home from '../components/Home/Chat'\r\nimport { getCurrentUser } from '../store/actions/userAction';\r\n\r\nconst Chat = () => {\r\n\r\n  const currentUser = useSelector(state => state.user.currentUser)\r\n  const dispatch = useDispatch()\r\n\r\n  const [isDrawer, setIsDrawer] = useState(false)\r\n  const [room, setRoom] = useState(``)\r\n  const [messages, setMessages] = useState([])\r\n  const [onlineUsers, setOnlineUsers] = useState([])\r\n  const [clients, setClients] = useState([])\r\n\r\n  const socket = useRef()\r\n  const publicSocket = useRef()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.token) {\r\n      return navigate('/login')\r\n    }\r\n    dispatch(getCurrentUser())\r\n    if (currentUser?.nickname && !publicSocket.current) {\r\n      publicSocket.current = new WebSocket('wss://chat-app-online.herokuapp.com/')\r\n      publicSocket.current.onopen = () => {\r\n        const message = {\r\n          event: 'connection',\r\n          user: currentUser?.nickname,\r\n          id: Date.now(),\r\n        }\r\n        \r\n        publicSocket.current.send(JSON.stringify(message))\r\n        console.log('Общее подключение установлено');\r\n      }\r\n      publicSocket.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        \r\n        if (data.event === 'connection') {\r\n          setOnlineUsers(prev => [...prev, data.user])  \r\n        }\r\n\r\n        if (data.event === 'disconnect') {\r\n          setOnlineUsers(prev => prev.filter(p => p !== data.user))  \r\n        }\r\n      }\r\n      publicSocket.current.onclose = (event) => {\r\n        console.log('publicSocket closed');\r\n      }\r\n    }\r\n\r\n\r\n  }, [dispatch, navigate, currentUser?.nickname, setOnlineUsers]);\r\n\r\n  const toggleDrawerHandler = () => {\r\n    setIsDrawer(prev => !prev)\r\n  }\r\n\r\n  const connection = (roomNum) => {\r\n    socket.current = new WebSocket('wss://chat-app-online.herokuapp.com/')\r\n    socket.current.onopen = () => {\r\n      const message = {\r\n        event: 'connection',\r\n        username: currentUser?.nickname,\r\n        id: Date.now(),\r\n        room: roomNum\r\n      }\r\n      \r\n      if (!clients.includes(message.id)) {\r\n        socket.current.send(JSON.stringify(message))  \r\n      }\r\n      \r\n      setClients([...clients, message.id])\r\n      console.log(`Подключение ${roomNum} установлено`);\r\n    }\r\n\r\n    socket.current.onmessage = (event) => {\r\n      const message = JSON.parse(event.data)\r\n      if (message.room) {\r\n        setMessages(prev => [...prev, message])\r\n      }\r\n      \r\n    }\r\n\r\n    socket.current.onclose = (event) => {\r\n      console.log('Поздключение закрыто');\r\n\r\n    }\r\n\r\n    socket.current.onerror = () => {\r\n      console.log('Ошибка');\r\n    }\r\n  }\r\n\r\n  const onConnect = (nickname) => {\r\n    setRoom(`${nickname}-${currentUser?.nickname}`)\r\n    if (!room.includes(nickname)) {\r\n      setMessages([]) \r\n      connection(`${nickname}-${currentUser?.nickname}`) \r\n    }\r\n  }\r\n\r\n  const sendMessage = (value) => {\r\n    const message = {\r\n      event: 'message',\r\n      username: currentUser?.nickname,\r\n      id: Date.now(),\r\n      message: value,\r\n      room\r\n    }\r\n    socket.current.send(JSON.stringify(message))\r\n  }\r\n\r\n  const toOnline = nickname => {\r\n    const message = {\r\n      event: 'connection',\r\n      id: Date.now(),\r\n      user: nickname\r\n    }\r\n    publicSocket.current.send(JSON.stringify(message))\r\n  }\r\n\r\n  const onDisconnect = (nickname) => {\r\n    const message = {\r\n      event: 'disconnect',\r\n      user: nickname\r\n    }\r\n    console.log('request', message);\r\n    publicSocket.current.send(JSON.stringify(message))\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', backgroundColor: '#181818' }} onClick={() => toOnline(currentUser?.nickname)}>\r\n      <Sidebar isDrawer={isDrawer} onConnect={onConnect} onlineUsers={onlineUsers}/>\r\n      <Home \r\n        isDrawer={isDrawer}\r\n        onToggle={toggleDrawerHandler} \r\n        messages={messages} \r\n        sendMessage={sendMessage} \r\n        onDisconnect={onDisconnect} \r\n        currentUser={currentUser}\r\n      />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom'\r\nimport EmptyAvatar from '../components/EmptyAvatar/EmptyAvatar';\r\nimport { updateProfile } from '../store/actions/userAction';\r\n\r\nconst Profile = () => {\r\n  const fileRef = useRef()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector(state => state.user.currentUser)\r\n  const [name, setName] = useState(currentUser?.nickname)\r\n  const [file, setFile] = useState(null)\r\n  const [previewSrc, setPreviewSrc] = useState('')\r\n  \r\n  const saveProfileHandler = async () => {\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('nickname', name)\r\n      if (file) {\r\n        formData.append('photo', file)\r\n      } else {\r\n        formData.append('photo', currentUser?.photo)\r\n      }\r\n      await dispatch(updateProfile(formData));\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  const openInputFile = () => {\r\n    fileRef.current.click()\r\n  }\r\n\r\n  const fileSelectHandler = event => {\r\n    const fileOne = event.target.files[0]\r\n    setFile(fileOne)\r\n\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = ev => {\r\n      setPreviewSrc(ev.target.result)\r\n    }\r\n\r\n    reader.readAsDataURL(fileOne)\r\n  }\r\n  return (\r\n    <div style={{ padding: '10px', width: '350px', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n      {currentUser ?\r\n        <><label className=\"label\">Ваш никнейм:</label> <br />\r\n          <input type=\"text\" value={name} onChange={e => setName(e.target.value)} className=\"input\"/> <br /> <br />\r\n          <label className=\"label\">Ваш аватар:</label> <br/>\r\n          {currentUser.photo ?\r\n            <img src={`${previewSrc ? previewSrc : process.env.REACT_APP_API_URL + currentUser?.photo}`} alt=\"photos\" className=\"img_profile\" />\r\n            : <EmptyAvatar big={true} nickname={currentUser.nickname} />\r\n\r\n          }\r\n          <input type=\"file\" title=\"Изменить аватар\" style={{display: 'none'}} onChange={fileSelectHandler} ref={fileRef}/>\r\n          <button className=\"btn_save btn_file\" onClick={openInputFile}>Изменить аватар</button>\r\n          <div style={{marginTop: '10px', display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n            <button className=\"btn_save\" onClick={saveProfileHandler}>Сохранить</button>\r\n            <button className=\"btn_back\" onClick={() => navigate('/')}>Назад</button>\r\n          </div>\r\n          \r\n        </> : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import {BrowserRouter, Routes, Route} from 'react-router-dom'\n\nimport Login from './pages/Login';\nimport Chat from './pages/Chat';\nimport Profile from './pages/Profile';\nfunction App() {\n  return (\n    <BrowserRouter >\n        <Routes >\n          <Route path=\"/\" element={<Chat />}>\n            <Route path=\"/:profile\" element={<Profile />} />\n          </Route>\n          <Route path=\"/login\" element={<Login />} />\n        </Routes>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","import { ADD_FRIEND, GET_FRIENDS, REMOVE_FRIEND } from \"../types\";\r\n\r\nconst initialState = {\r\n  friends: []\r\n};\r\n\r\nconst handlers = {\r\n  [ADD_FRIEND]: (state, action) => ({\r\n    ...state,\r\n    friends: [...state.friends, action.payload],\r\n  }),\r\n  [REMOVE_FRIEND]: (state, action) => ({\r\n    ...state,\r\n    friends: state.friends.filter(f => f.id !== action.payload),\r\n  }),\r\n  [GET_FRIENDS]: (state, action) => ({\r\n    ...state,\r\n    friends: action.payload,\r\n  }),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const friendReducer = (state = initialState, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}","import { GET_USERS, LOGIN, LOGOUT, CLEAR_USERS, GET_CURRENT_USER } from \"../types\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  users: [],\r\n  currentUser: null\r\n};\r\n\r\nconst handlers = {\r\n  [LOGIN]: (state, action) => ({\r\n    ...state,\r\n    token: action.payload,\r\n  }),\r\n  [LOGOUT]: (state) => ({\r\n    ...state,\r\n    token: null,\r\n    currentUser: null\r\n  }),\r\n  [GET_USERS]: (state, action) => ({\r\n    ...state,\r\n    users: action.payload,\r\n  }),\r\n  [CLEAR_USERS]: (state) => ({\r\n    ...state,\r\n    users: []\r\n  }),\r\n  [GET_CURRENT_USER]: (state, action) => ({\r\n    ...state,\r\n    currentUser: action.payload\r\n  }),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT\r\n  return handler(state, action)\r\n}","import {combineReducers} from 'redux'\r\nimport { friendReducer } from './friendReducer'\r\nimport { userReducer } from './userReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n  friend: friendReducer\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}